[{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement mike.mason@bms.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Mike Mason Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Mason. Author, maintainer. Jimmy Fulp. Author. Alexandre Alloy. Contributor.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mason M, Fulp J (2024). icWGCNA: Iterative Correcting Weighted Gene Co-expression Network Analysis. R package version 0.2.5.9000, https://github.com/Systems-Methods/icWGCNA.","code":"@Manual{,   title = {icWGCNA: Iterative Correcting Weighted Gene Co-expression Network Analysis},   author = {Mike Mason and Jimmy Fulp},   year = {2024},   note = {R package version 0.2.5.9000},   url = {https://github.com/Systems-Methods/icWGCNA}, }"},{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"Iterative Correcting Weighted Gene Co-expression Network Analysis function constructing gene network gene expression matrix. algorithm: differences standard WGNCA (Horvath/Langfelder): Makes heavy use Rfast compute adjacencies topological overlap measure (TOM), enables iterative network creation > 20K features. Always uses signed adjacency order avoid possible distortions community signatures (eigengenes). Iteratively regresses strongest community order facilitate discovery communities possibly obscured larger module(s). Clustering focus merging communities dropping identify strongest module(s), keeping communities higher membership kurtosis. addition Pearson correlation, option Spearman correlation base constructing adjacency matrix measure order enable robust application RNA-seq micro-array data. Future updates may include mutual information measures similarity.","code":"1. Constructs a signed wgcna network 2. Drops correlated modules based on membership kurtosis 3. Regresses out the strongest community from the expression data 4. Repeats steps 1-3 until a maximum number of communities or iterations is reached"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"Install released version icWGCNA Github: install development version BMS BioGit : :","code":"remotes::install_github(repo = \"Systems-Methods/icWGCNA\") remotes::install_github(repo = \"Systems-Methods/icWGCNA\",                          ref = \"develop\") remotes::install_git(   'https://github.com/Systems-Methods/icWGCNA.git' )"},{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"example-data","dir":"","previous_headings":"Example","what":"Example Data","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"First can use {UCSCXenaTools} package download example mRNASeq dataset.","code":"luad <- UCSCXenaTools::getTCGAdata(project = \"LUAD\",                                     mRNASeq = TRUE,                                     mRNASeqType = \"normalized\",                                    clinical = FALSE,                                     download = TRUE)  ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1)"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"main-results","dir":"","previous_headings":"Example","what":"Main Results","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"Next can run main icwgcna() function","code":"library(icWGCNA)  results <- icwgcna(ex,                       expo = 6,                    Method = \"pearson\",                    q = 0.3,                    maxIt = 10,                    maxComm = 100,                    corCut = 0.8,                    covCut = 0.33,                    mat_mult_method = \"Rfast\")"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"downstream-analysis","dir":"","previous_headings":"Example","what":"Downstream Analysis","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"Finally, downstream analysis can run Iterative Correcting Weighted Gene Co-expression Network Analysis results.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"compute-community-signatures-eigengenes","dir":"","previous_headings":"Example > Downstream Analysis","what":"Compute community signatures (eigengenes)","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"","code":"eigengene_mat <- compute_eigengene_matrix(   ex,    membership_matrix = results$community_membership,    cutoff = 5,   pc_flag = TRUE )"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"compute-panglaodb-collection-enrichments-for-each-community","dir":"","previous_headings":"Example > Downstream Analysis","what":"Compute panglaoDB collection enrichments for each community","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"","code":"pangDB <- data.table::fread(pangDB_link) panglaoDB_enrichment <- compute_panglaoDB_enrichment(   results$community_membership,   K = 100,   memb_cut = 0.65,   pangDB = pangDB,   prolif = prolif_names,    p_cut = 0.001 )"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"compute-msigdb-collection-enrichments-for-each-community","dir":"","previous_headings":"Example > Downstream Analysis","what":"Compute MSigDB collection enrichments for each community","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"","code":"MSigDB_enrichment <- compute_MSigDB_enrichment(   results$community_membership,   K = 100,   memb_cut = .65,   cats = c(\"H\", \"C3\", \"C6\", \"C7\", \"C8\"),    p_cut = 0.001 )"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"compute-xcell-collection-enrichments-for-each-community","dir":"","previous_headings":"Example > Downstream Analysis","what":"Compute xCell collection enrichments for each community","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"","code":"xCell_enrichment <- compute_xCell_enrichment(   results$community_membership,   K = 100,   memb_cut = .65,    p_cut = 0.001 )"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"display-umap-of-community-membership-with-text-overlays","dir":"","previous_headings":"Example > Downstream Analysis","what":"Display UMAP of Community Membership with text overlays","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"","code":"network_umap <- make_network_umap(   results$community_membership,   community_memb_cut_main = 0.7,   community_n_main = 20,   community_memb_cut_secondary = 0.8,   community_n_secondary = 5,   gene_memb_cut_main = 0.75,   gene_memb_cut_secondary = 0.65,   community_labels = NULL,   umap_specs = umap::umap.defaults )  network_umap$umap_w_annotation"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"identify-top-gene-of-communities-that-are-unique-only-belong-to-one-community","dir":"","previous_headings":"Example > Downstream Analysis","what":"Identify Top Gene of Communities that are unique (only belong to one community)","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"","code":"unique_top_genes <- find_unique_top_genes(   results$community_membership,   K = 10,   maxIt = 10 )"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"map-icwgcna-eigengenes-on-a-seurat-object","dir":"","previous_headings":"Example > Downstream Analysis","what":"Map icWGCNA Eigengenes on a Seurat Object","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"","code":"unique_top_genes <- map_eigengenes_on_seurat(   SeuratObject::pbmc_small,   results$community_membership,   cutoff_method = \"top_gene\",   top_genes_cutoff = 20 )"},{"path":"https://systems-methods.github.io/icWGCNA/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis","text":"Please note icWGCNA project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/RfastTOMdist.html","id":null,"dir":"Reference","previous_headings":"","what":"RfastTOMdist — RfastTOMdist","title":"RfastTOMdist — RfastTOMdist","text":"distance based topological overlap map Ravasz, E., Somera, ., Mongru, D., Oltvai, Z. Barab´asi, . (2002). Science Implemented using Rfast functions  speed things since computing 25 times","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/RfastTOMdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RfastTOMdist — RfastTOMdist","text":"","code":"RfastTOMdist(A, mat_mult_method = c(\"Rfast\", \"RcppEigen\"))"},{"path":"https://systems-methods.github.io/icWGCNA/reference/RfastTOMdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RfastTOMdist — RfastTOMdist","text":"N x N adjacency matrix N number genes. values range -1:1 higher values indicating highly similar genes. Often correlation ^exponent, angular distance, mutual information Euclidean distance mat_mult_method method large matrix multiplication, \"Rfast\" (default) \"RcppEigen\" (see details icwgcna())","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/RfastTOMdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RfastTOMdist — RfastTOMdist","text":"N x N distance matrix smaller values indicating related genes.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_MSigDB_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute MSigDB Collection Enrichments for each community — compute_MSigDB_enrichment","title":"Compute MSigDB Collection Enrichments for each community — compute_MSigDB_enrichment","text":"Compute MSigDB Collection enrichments using msigdbr using Fisher test.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_MSigDB_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute MSigDB Collection Enrichments for each community — compute_MSigDB_enrichment","text":"","code":"compute_MSigDB_enrichment(   membership_matrix,   K = 100,   memb_cut = 0.65,   cats = c(\"H\", \"C3\", \"C6\", \"C7\", \"C8\"),   p_cut = 0.001 )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_MSigDB_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute MSigDB Collection Enrichments for each community — compute_MSigDB_enrichment","text":"membership_matrix community membership (kME) matrix genes rows communities columns. Often community_membership full_community_membership output icwgcna() K cutoff top community genes include computing enrichment. Used condition memb_cut. memb_cut cutoff membership score threshold determining top community genes computing enrichment.  Used condition K. cats MSigDB collections use. recommend using H, C3, C6, C7, C8 avoiding C1, C2, C4, C5 speed p_cut p value cutoff determining importance. p values p_cut community, cell type selected","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_MSigDB_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute MSigDB Collection Enrichments for each community — compute_MSigDB_enrichment","text":"Returns list following items: top_enr - data.frame significant enrichment MSigDB collection. full_enr - MSigDB enrichment scores communities selected collections.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_MSigDB_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute MSigDB Collection Enrichments for each community — compute_MSigDB_enrichment","text":"function can use parallel distributed processing R, via foreach package. GSEA Enrichment testing assumes differential analysis using simple fisher tests instead (actually hypergeometric speed)","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_MSigDB_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute MSigDB Collection Enrichments for each community — compute_MSigDB_enrichment","text":"","code":"if (FALSE) { library(\"UCSCXenaTools\") luad <- getTCGAdata(   project = \"LUAD\", mRNASeq = TRUE, mRNASeqType = \"normalized\",   clinical = FALSE, download = TRUE ) ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1) results <- icwgcna(ex)  # Running with whatever parallel processing is already set up compute_MSigDB_enrichment(results$community_membership)  # Using doParallel package to set up parallel processing cl <- parallel::makePSOCKcluster(2) doParallel::registerDoParallel(cl) compute_MSigDB_enrichment(results$community_membership)  # Using doMC package to set up parallel processing (not available in Windows) doMC::registerDoMC() compute_MSigDB_enrichment(results$community_membership) }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_eigengene_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute community signatures (eigengenes) — compute_eigengene_matrix","title":"Compute community signatures (eigengenes) — compute_eigengene_matrix","text":"Computes community signatures (eigengenes) expression matrix given particular community membership (kME) matrix","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_eigengene_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute community signatures (eigengenes) — compute_eigengene_matrix","text":"","code":"compute_eigengene_matrix(ex, membership_matrix, cutoff = 5, pc_flag = TRUE)"},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_eigengene_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute community signatures (eigengenes) — compute_eigengene_matrix","text":"ex matrix bulk RNA-seq microarray gene expression data. log space greater equal 0. membership_matrix community membership (kME) matrix genes rows communities columns. Often community_membership full_community_membership output icwgcna() cutoff number top genes use computing community signatures pc_flag indicator. TRUE (default) means use 1st principal component (corrected direction). FALSE uses mean scaled centered top genes.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_eigengene_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute community signatures (eigengenes) — compute_eigengene_matrix","text":"matrix rows community signature columns samples","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_eigengene_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute community signatures (eigengenes) — compute_eigengene_matrix","text":"can used compute community signatures new expression dataset. Note, community signatures corrected icwgcna() iterations match signatures output icwgcna() run network construction dataset. using community signatures modeling may best include interaction terms use tree based methods since dependencies addressed output matrix.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_eigengene_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute community signatures (eigengenes) — compute_eigengene_matrix","text":"","code":"if (FALSE) { library(\"UCSCXenaTools\") luad <- getTCGAdata(   project = \"LUAD\", mRNASeq = TRUE, mRNASeqType = \"normalized\",   clinical = FALSE, download = TRUE ) ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1)  results <- icwgcna(ex)  compute_eigengene_matrix(ex, results$community_membership) }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_panglaoDB_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cell Type Enrichments Using panglaoDB Cell Markers — compute_panglaoDB_enrichment","title":"Compute Cell Type Enrichments Using panglaoDB Cell Markers — compute_panglaoDB_enrichment","text":"compute cell type enrichments using panglaoDB cell markers using Fisher test.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_panglaoDB_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cell Type Enrichments Using panglaoDB Cell Markers — compute_panglaoDB_enrichment","text":"","code":"compute_panglaoDB_enrichment(   membership_matrix,   K = 100,   memb_cut = 0.65,   pangDB = data.table::fread(pangDB_link),   prolif = prolif_names,   p_cut = 0.001 )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_panglaoDB_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cell Type Enrichments Using panglaoDB Cell Markers — compute_panglaoDB_enrichment","text":"membership_matrix community membership (kME) matrix genes rows communities columns. Often community_membership full_community_membership output icwgcna() K cutoff top community genes include computing enrichment. Used condition memb_cut. memb_cut cutoff membership score threshold determining top community genes computing enrichment.  Used condition K. pangDB panglaoDB cell markers database. Default read data t url pangDB_link prolif list proliferation genes check. Default use prolif_names p_cut p value cutoff determining importance. p values p_cut community, cell type selected","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_panglaoDB_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cell Type Enrichments Using panglaoDB Cell Markers — compute_panglaoDB_enrichment","text":"Returns list following items: top_enr - significant cell type enrichment scores. full_enr - panglaoDB cell type enrichment scores communities.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_panglaoDB_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Cell Type Enrichments Using panglaoDB Cell Markers — compute_panglaoDB_enrichment","text":"","code":"if (FALSE) { library(\"UCSCXenaTools\") luad <- getTCGAdata(   project = \"LUAD\", mRNASeq = TRUE, mRNASeqType = \"normalized\",   clinical = FALSE, download = TRUE ) ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1) results <- icwgcna(ex)  pangDB <- data.table::fread(pangDB_link) compute_panglaoDB_enrichment(results$community_membership, pangDB = pangDB) }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_xCell_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cell Type Enrichments Using xCell Cell Markers — compute_xCell_enrichment","title":"Compute Cell Type Enrichments Using xCell Cell Markers — compute_xCell_enrichment","text":"Compute cell type enrichments using xCell cell markers Fisher test.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_xCell_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cell Type Enrichments Using xCell Cell Markers — compute_xCell_enrichment","text":"","code":"compute_xCell_enrichment(   membership_matrix,   K = 100,   memb_cut = 0.65,   p_cut = 0.001 )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_xCell_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cell Type Enrichments Using xCell Cell Markers — compute_xCell_enrichment","text":"membership_matrix community membership (kME) matrix genes rows communities columns. Often community_membership full_community_membership output icwgcna() K cutoff top community genes include computing enrichment. Used condition memb_cut. memb_cut cutoff membership score threshold determining top community genes computing enrichment. Used condition K. p_cut p value cutoff determining importance. p values p_cut community, cell type selected","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_xCell_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cell Type Enrichments Using xCell Cell Markers — compute_xCell_enrichment","text":"Returns list following items: top_enr - significant cell type enrichment scores. full_enr - panglaoDB cell type enrichment scores communities.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_xCell_enrichment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Cell Type Enrichments Using xCell Cell Markers — compute_xCell_enrichment","text":"note distinct running xCell run expression data. enrichment using cell markers.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/compute_xCell_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Cell Type Enrichments Using xCell Cell Markers — compute_xCell_enrichment","text":"","code":"if (FALSE) { library(\"UCSCXenaTools\") luad <- getTCGAdata(   project = \"LUAD\", mRNASeq = TRUE, mRNASeqType = \"normalized\",   clinical = FALSE, download = TRUE ) ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1) results <- icwgcna(ex)  compute_xCell_enrichment(results$community_membership) }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/eigenMapMatMult.html","id":null,"dir":"Reference","previous_headings":"","what":"Faster Matrix Multiplication — eigenMapMatMult","title":"Faster Matrix Multiplication — eigenMapMatMult","text":"Faster matrix multiplication using C++.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/eigenMapMatMult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faster Matrix Multiplication — eigenMapMatMult","text":"","code":"eigenMapMatMult(A, B)"},{"path":"https://systems-methods.github.io/icWGCNA/reference/eigenMapMatMult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faster Matrix Multiplication — eigenMapMatMult","text":", B Matrices.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/fastTOMwrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"fastTOMwrapper — fastTOMwrapper","title":"fastTOMwrapper — fastTOMwrapper","text":"Topological overlap map (TOM, Ravasz, et al (2002). Science) wrapper using Rfast speed calculations. function can compute TOM 24K gene matrix 8 minute AWS-EC2 c5.18xlarge instance, though practice run subsets variable genes. Adjacently measure options Pearson Spearman correlation raised power angular distance. Note use signed weighted adjacencies. users interested genes negatively associated community check community memberships (kME) output main function icwgcna().","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/fastTOMwrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fastTOMwrapper — fastTOMwrapper","text":"","code":"fastTOMwrapper(   X,   expo = 6,   Method = c(\"pearson\", \"spearman\"),   mat_mult_method = c(\"Rfast\", \"RcppEigen\") )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/fastTOMwrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fastTOMwrapper — fastTOMwrapper","text":"X gene expression matrix w column one sample N rows representing genes. X log space (usually 0 20) expo power raise similarity measure default = 6. set NULL, angular distance used applied similarity measure ( asin(x) / (pi/2) ). Method \"pearson\" \"spearman\" similarity measure use mat_mult_method method large matrix multiplication, \"Rfast\" (default) \"RcppEigen\" (see details icwgcna())","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/fastTOMwrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fastTOMwrapper — fastTOMwrapper","text":"N x N distance matrix smaller values indicating related genes.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/find_unique_top_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"Identify Top Gene Communities unique (belong one community)","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/find_unique_top_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"","code":"find_unique_top_genes(membership_matrix, K = 10, maxIt = 10)"},{"path":"https://systems-methods.github.io/icWGCNA/reference/find_unique_top_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"membership_matrix community membership (kME) matrix genes rows communities columns. Often community_membership full_community_membership output icwgcna() K number unique genes find. maxIt maximum number iterations avoid looping meaningless top genes","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/find_unique_top_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"data.frame key = community value = top gene ID. Top genes associated one module.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/find_unique_top_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Top Gene of Communities that are unique (only belong to one community) — find_unique_top_genes","text":"","code":"if (FALSE) { library(\"UCSCXenaTools\") luad <- getTCGAdata(   project = \"LUAD\", mRNASeq = TRUE, mRNASeqType = \"normalized\",   clinical = FALSE, download = TRUE ) ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1) results <- icwgcna(ex)  unique_top_genes <- find_unique_top_genes(     results$community_membership,     K = 100,     maxIt = 10) }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/gene_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene ID Mapping of Expression Dataset — gene_mapping","title":"Gene ID Mapping of Expression Dataset — gene_mapping","text":"Converts Gene IDs given expression dataset mapping file.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/gene_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene ID Mapping of Expression Dataset — gene_mapping","text":"","code":"gene_mapping(   exprs_data,   mapping_file,   compress_fun = c(\"mean\", \"median\", \"sum\", \"pc1\", \"pc1_unscaled\", \"highest_mean\",     \"highest_median\"),   compress_trans = c(\"none\", \"log_exp\", \"exp_log\"),   verbose = TRUE )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/gene_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene ID Mapping of Expression Dataset — gene_mapping","text":"exprs_data continuous value data.frame matrix Gene IDs rownames mapping_file mapping file data.frame first column Gene IDs rownames exprs_data second column IDs map . Can multiple multiple linking. compress_fun compression method use cases multiple gene IDs link single new gene ID. \"highest_mean\" \"highest_median\" pick highest row based mean median, respectively, \"mean\", \"median\", \"sum\" aggregate duplicate rows based method chosen. \"pc1\" \"pc1_unscaled\" using first principal component stats::prcomp(), scale. set TRUE FALSE, respectively. compress_trans transformation used compressing duplicate rows. example, \"log_exp\" take log data, apply compress_fun method, transpose back using exp (.e. geometric mean). verbose messages compression process displayed","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/gene_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene ID Mapping of Expression Dataset — gene_mapping","text":"data.frame new gene ID level, compression duplicate rows outlined compress_fun compress_trans parameters","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/gene_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene ID Mapping of Expression Dataset — gene_mapping","text":"Gene IDs exprs_data link first column mapping_file excluded final output. pc1 pc1_unscaled compress_fun specified 1st principal component flipped negative correlation duplicate rows.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/gene_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene ID Mapping of Expression Dataset — gene_mapping","text":"","code":"if (FALSE) { geo <- GEOquery::getGEO(\"GSE14333\") exprs_data <- geo$GSE14333_series_matrix.txt.gz@assayData$exprs  library(hgu133plus2.db) mapping_file     <- as.data.frame(hgu133plus2SYMBOL)  gene_mapping(exprs_data, mapping_file, \"highest_mean\", \"none\")  ### Using a more complicated case for GSE83834 temp_dir <- tempdir() geo <- GEOquery::getGEO(\"GSE83834\", destdir = temp_dir) sup_mat <- GEOquery::getGEOSuppFiles(\"GSE83834\", baseDir = temp_dir) exprs_data_raw <- as.data.frame(readxl::read_excel(rownames(sup_mat))) table(table(exprs_data_raw$ID))  exprs_data <- exprs_data_raw[,-1] rownames(exprs_data) <- sub('\\\\.[0-9]*$', '', exprs_data_raw$ID)  library('biomaRt') mart <- useDataset(\"hsapiens_gene_ensembl\", useMart(\"ensembl\")) genes <-  rownames(exprs_data) mapping_file <- getBM(filters= \"ensembl_gene_id\",                       attributes= c(\"ensembl_gene_id\",\"hgnc_symbol\"),                       values = genes, mart= mart)  exprs_data_symbols <- gene_mapping(exprs_data, mapping_file)  }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/icwgcna.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","text":"Iterative Correcting Weighted Gene Co-expression Network Analysis function constructing network expression matrix.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/icwgcna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","text":"","code":"icwgcna(   ex,   expo = 6,   Method = c(\"pearson\", \"spearman\"),   q = 0.3,   maxIt = 10,   maxComm = 100,   corCut = 0.8,   covCut = 0.33,   mat_mult_method = c(\"Rfast\", \"RcppEigen\") )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/icwgcna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","text":"ex matrix bulk RNA-seq microarray gene expression data. log space greater 0. expo exponent use soft thresholding. NULL use angular distance Method correlation use distance measure, \"pearson\" (default) \"spearman\" q quantile (0-1) first round filtering based mean expression standard deviation maxIt maximum number iterations must 25 less maxComm maximum number communities found corCut correlation threshold used dropping communities covCut coefficient variation (CoV) quantile threshold use iteration  selecting genes build network. covCut = .667 use top third genes based CoV regressing largest community mat_mult_method method large matrix multiplication, \"Rfast\" (default) \"RcppEigen\" (see Details)","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/icwgcna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","text":"Returns list following items: community_membership - community membership score (kME). Analogous loadings PCA. community_signature - community eigengene, first principal component expression genes community (proper direction). can thought average scaled expression top community genes. .community_membership - full community membership score (exploratory purposes) .community_signature - full community eigengene (exploratory purposes) controlled_for - communities whose signatures regressed iteration.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/icwgcna.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","text":"Iterative Correcting Weighted Gene Co-expression Network Analysis function constructing gene network gene expression matrix. algorithm: Constructs signed wgcna network Drops correlated modules based kurtosis. Regresses largest community expression data. Repeats steps 1-3 maximum number communities iterations reached. differences standard WGNCA (Horvath/Langfelder) Makes heavy use Rfast compute adjacencies TOM enable iterative network creation > 20K features. Uses signed adjacency order avoid possible distortions community signatures (eigengenes). Iteratively regresses strongest community order facilitate discovery communities possibly obscured larger module(s). Clustering focus merging communities dropping identify strongest module(s). Enables Spearman correlation constructing adjacency matrix instead Pearson enable robust application RNA-seq micro-array data. Future updates may include mutual information matrix multiplication option \"Rfast\" use Rfast::mat.mult(), takes advantage parallel processing across multiple cores. option \"RcppEigen\" use RcppEigen engine C++ code, tends faster using single core, take advantage parallel processing across multiple cores. running cluster access many computer core significant performance advantage using Rfast::mat.mult() Note, uncorrected_community_signature matrix useful comparing signature matrices new datasets computed compute compute_eigengene_matrix(). community signatures uncorrected_community_signature matrix may show high level colinearity strong recommend use tree based learners analysis based .","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/icwgcna.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","text":"Langfelder P, Horvath S (2008). ``WGCNA: R package weighted correlation network analysis.'' BMC Bioinformatics, 559. https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-9-559. Langfelder P, Horvath S (2012). ``Fast R Functions Robust Correlations Hierarchical Clustering.'' Journal Statistical Software, 46(11), 1--17. https://www.jstatsoft.org/v46/i11/. Zhang, Bin Horvath, Steve. \"General Framework Weighted Gene Co-Expression Network Analysis\" Statistical Applications Genetics Molecular Biology, vol. 4, . 1, 2005. https://doi.org/10.2202/1544-6115.1128 Mason, M.J., Fan, G., Plath, K. et al. Signed weighted gene co-expression network analysis transcriptional regulation murine embryonic stem cells. BMC Genomics 10, 327 (2009). https://doi.org/10.1186/1471-2164-10-327#'","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/icwgcna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Iterative Correcting Weighted Gene Co-expression Network Analysis — icwgcna","text":"","code":"if (FALSE) { library(\"UCSCXenaTools\") luad <- getTCGAdata(   project = \"LUAD\", mRNASeq = TRUE, mRNASeqType = \"normalized\",   clinical = FALSE, download = TRUE ) ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1)  results <- icwgcna(ex) }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/make_network_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Display UMAP of Community Membership with text overlays — make_network_umap","title":"Display UMAP of Community Membership with text overlays — make_network_umap","text":"Display UMAP Community Membership text overlays","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/make_network_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display UMAP of Community Membership with text overlays — make_network_umap","text":"","code":"make_network_umap(   membership_matrix,   community_memb_cut_main = 0.7,   community_n_main = 20,   community_memb_cut_secondary = 0.8,   community_n_secondary = 5,   gene_memb_cut_main = 0.75,   gene_memb_cut_secondary = 0.65,   community_labels = NULL,   umap_specs = umap::umap.defaults )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/make_network_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display UMAP of Community Membership with text overlays — make_network_umap","text":"membership_matrix community membership (kME) matrix genes rows communities columns. Often community_membership full_community_membership output icwgcna() community_memb_cut_main main cutoff membership score threshold filtering communities include plot. communities less community_n_main number genes greater community_memb_cut_main filtered . community_n_main number genes must membership scores great community_memb_cut_main order community kept plot. community_memb_cut_secondary cutoff membership score threshold filtering genes include plot. communities less community_n_secondary number genes greater community_memb_cut_secondary filtered . community_n_secondary number genes must membership scores great community_memb_cut_secondary order community kept plot. gene_memb_cut_main main cutoff membership score threshold filtering genes include plot. genes absolute membership score greater gene_memb_cut_main community included gene_memb_cut_secondary secondary cutoff membership score threshold filtering genes include plot. genes absolute membership score greater gene_memb_cut_main 1 community included community_labels data.frame text display gene communities. Expects first column match column names membership_matrix second column contain text labels associated community umap_specs configuration UMAP (default umap::umap.defaults). use custom specs copy umap::umap.defaults make specific changes (see Examples)","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/make_network_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display UMAP of Community Membership with text overlays — make_network_umap","text":"Returns list following items: umap_w_annotation - UMAP plot genes labeled clusters overlaid umap_w_legend - UMAP plot genes legend overlaid labels layout - UMAP layout enable customized user plotting","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/make_network_umap.html","id":"filtering","dir":"Reference","previous_headings":"","what":"Filtering","title":"Display UMAP of Community Membership with text overlays — make_network_umap","text":"order facilitate viewing, communities genes filtered prior plotting. Gene filtering performed community filtering. inclusion either main secondary parameters can satisfied. example, using defaults community must either 20 genes 0.7 kME 5 genes 0.8 kME included. community filtering, gene filtering performed. using defaults , gene must least one community 0.75 kME two communities 0.65 kME included. Setting community_memb_cut_main gene_memb_cut_main 0 force communities genes included UMAP","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/make_network_umap.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Display UMAP of Community Membership with text overlays — make_network_umap","text":"umap_w_annotation umap_w_legend outputs ggplot objects, plot details can easily added modified (.e. umap_results$umap_w_legend + theme_classic()).","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/make_network_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display UMAP of Community Membership with text overlays — make_network_umap","text":"","code":"if (FALSE) { library(\"UCSCXenaTools\") luad <- getTCGAdata(   project = \"LUAD\", mRNASeq = TRUE, mRNASeqType = \"normalized\",   clinical = FALSE, download = TRUE ) ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1) results <- icwgcna(ex)  umap_results <- make_network_umap(results$community_membership) umap_results$umap_w_annotation umap_results$umap_w_legend + theme(legend.position = 'top')  # can adjust umap specifications custom_umap_specs <- umap::umap.defaults custom_umap_specs$n_neighbors <- 20  umap_results <- make_network_umap(results$community_membership,                                   umap_specs = custom_umap_specs) }"},{"path":"https://systems-methods.github.io/icWGCNA/reference/map_eigengenes_on_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Eigengenes on a Seurat Object — map_eigengenes_on_seurat","title":"Map Eigengenes on a Seurat Object — map_eigengenes_on_seurat","text":"Use scores calculate module scores feature expression programs single cells applies Seurat object using UCell::AddModuleScore_UCell()","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/map_eigengenes_on_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Eigengenes on a Seurat Object — map_eigengenes_on_seurat","text":"","code":"map_eigengenes_on_seurat(   seurat_obj,   membership,   cutoff_method = c(\"value\", \"top_gene\", \"both\"),   value_cutoff = 0.75,   top_genes_cutoff = 10,   assay = \"RNA\",   slot = \"data\",   prefix = NULL,   suffix = \"_UCell\",   ncores = 1 )"},{"path":"https://systems-methods.github.io/icWGCNA/reference/map_eigengenes_on_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Eigengenes on a Seurat Object — map_eigengenes_on_seurat","text":"seurat_obj Seurat Object membership data.frame matrix continuous values, genes rows communities columns. Often community_membership full_community_membership output icwgcna(). cutoff_method cutoff based value, number top genes, method. method apply top gene method, genes higher value_cutoff. value_cutoff value cutoff (ignored cutoff_method = \"top_gene\") top_genes_cutoff number top genes include (ignored cutoff_method = \"value\") assay Seurat object assay element use slot Pull data slot Seurat object prefix prefix add column names Seurat object meta.data suffix suffix add column names Seurat object meta.data ncores Number processors parallelize computation UCell::AddModuleScore_UCell()","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/map_eigengenes_on_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Eigengenes on a Seurat Object — map_eigengenes_on_seurat","text":"Seurat Object additional meta.data columns community results","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/map_eigengenes_on_seurat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map Eigengenes on a Seurat Object — map_eigengenes_on_seurat","text":"typical Seurat objects function may take minutes using one core.","code":""},{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/reference/pangDB_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Current link used to connect to panglaoDB cell markers — pangDB_link","title":"Current link used to connect to panglaoDB cell markers — pangDB_link","text":"Current link used connect panglaoDB cell markers","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/pangDB_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current link used to connect to panglaoDB cell markers — pangDB_link","text":"","code":"pangDB_link"},{"path":"https://systems-methods.github.io/icWGCNA/reference/pangDB_link.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Current link used to connect to panglaoDB cell markers — pangDB_link","text":"object class character length 1.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/pangDB_link.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Current link used to connect to panglaoDB cell markers — pangDB_link","text":"pangDB_link = https://panglaodb.se/markers/PanglaoDB_markers_27_Mar_2020.tsv.gz","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/pangDB_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Current link used to connect to panglaoDB cell markers — pangDB_link","text":"","code":"pangDB_link #> [1] \"https://panglaodb.se/markers/PanglaoDB_markers_27_Mar_2020.tsv.gz\""},{"path":"https://systems-methods.github.io/icWGCNA/reference/prolif_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Current list of proliferation genes to check — prolif_names","title":"Current list of proliferation genes to check — prolif_names","text":"Current list proliferation genes check","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/prolif_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current list of proliferation genes to check — prolif_names","text":"","code":"prolif_names"},{"path":"https://systems-methods.github.io/icWGCNA/reference/prolif_names.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Current list of proliferation genes to check — prolif_names","text":"object class character length 27.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/reference/prolif_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Current list of proliferation genes to check — prolif_names","text":"","code":"prolif_names #>  [1] \"TPX2\"   \"PRC1\"   \"BIRC5\"  \"CEP55\"  \"MELK\"   \"KIF4A\"  \"CDC20\"  \"MCM10\"  #>  [9] \"HJURP\"  \"FOXM1\"  \"TOP2A\"  \"DLGAP5\" \"KIF2C\"  \"KIF14\"  \"ASPM\"   \"NEK2\"   #> [17] \"CDCA8\"  \"CDKN3\"  \"NUF2\"   \"CDCA3\"  \"CCNA2\"  \"CDCA5\"  \"CCNB1\"  \"ANLN\"   #> [25] \"TTK\"    \"KIF20A\" \"CCNB2\""},{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"new-features-0-2-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"icWGCNA 0.2.5","text":"find_unique_top_genes() identify top gene communities unique (belong one community)","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"other-changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Other Changes","title":"icWGCNA 0.2.5","text":"Now users run compute_eigengene_matrix() icwgcna()uncorrected community signatures needed.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"icwgcna-024","dir":"Changelog","previous_headings":"","what":"icWGCNA 0.2.4","title":"icWGCNA 0.2.4","text":"Fixed bug compute_eigengene_matrix() genes cutoff","code":""},{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"new-features-0-2-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"icWGCNA 0.2.3","text":"gene_mapping() function converting gene types (.e. ENTREZ Hugo), many options compression duplicate rows.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"other-changes-0-2-3","dir":"Changelog","previous_headings":"","what":"Other Changes","title":"icWGCNA 0.2.3","text":"Minor bug fixes Switching fastcluster::hclust() stats pacakge (#16)","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"icwgcna-022","dir":"Changelog","previous_headings":"","what":"icWGCNA 0.2.2","title":"icWGCNA 0.2.2","text":"Bug fixes internal function improvements Add p value output compute_MSigDB_enrichment() Add full_metaGenes full_eigenGenes output icwgcna()","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"icwgcna-021","dir":"Changelog","previous_headings":"","what":"icWGCNA 0.2.1","title":"icWGCNA 0.2.1","text":"Bug fixes checking PC1 > 35% input expression icWGCNA returns uncorrected_community_signature instead full_community_membership full_community_signature","code":""},{"path":[]},{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"enrichments-functions-0-2-0","dir":"Changelog","previous_headings":"New Features","what":"Enrichments Functions","title":"icWGCNA 0.2.0","text":"compute_MSigDB_enrichment() (parallel distributed processing) compute_xCell_enrichment()","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"umap-plotting-0-2-0","dir":"Changelog","previous_headings":"New Features","what":"UMAP Plotting","title":"icWGCNA 0.2.0","text":"make_network_umap()","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"icwgcna-011","dir":"Changelog","previous_headings":"","what":"icWGCNA 0.1.1","title":"icWGCNA 0.1.1","text":"Released public Github.","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"icwgcna-010","dir":"Changelog","previous_headings":"","what":"icWGCNA 0.1.0","title":"icWGCNA 0.1.0","text":"Initial release shared publicly","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"icWGCNA 0.1.0","text":"Better panglaoDB variable name matches error catching (#18) Downstream functions improvement error catching","code":""},{"path":[]},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"bug-fixes-0-0-0-9002","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"icWGCNA 0.0.0.9002","text":"Fixed error genes 0 standard deviation (#16)","code":""},{"path":"https://systems-methods.github.io/icWGCNA/news/index.html","id":"icwgcna-0009001","dir":"Changelog","previous_headings":"","what":"icWGCNA 0.0.0.9001","title":"icWGCNA 0.0.0.9001","text":"First Version","code":""}]
