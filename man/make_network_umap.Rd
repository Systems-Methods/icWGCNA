% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downstream.R
\name{make_network_umap}
\alias{make_network_umap}
\title{Display UMAP of Community Membership with text overlays}
\usage{
make_network_umap(
  membership_matrix,
  community_memb_cut_main = 0.7,
  community_n_main = 20,
  community_memb_cut_secondary = 0.8,
  community_n_secondary = 5,
  gene_memb_cut_main = 0.75,
  gene_memb_cut_secondary = 0.65,
  community_labels = NULL,
  umap_specs = umap::umap.defaults
)
}
\arguments{
\item{membership_matrix}{a community membership (kME) matrix with genes as
rows and communities as columns. Often \code{community_membership} or
\code{full_community_membership} output from \code{\link[=icwgcna]{icwgcna()}}}

\item{community_memb_cut_main}{main cutoff of a membership score threshold
for filtering out communities to include in the plot. Any communities with
less than \code{community_n_main} number of genes greater than
\code{community_memb_cut_main} are filtered out.}

\item{community_n_main}{the number of genes that must have membership scores
great than \code{community_memb_cut_main} in order for a community to be
kept in the plot.}

\item{community_memb_cut_secondary}{cutoff of a membership score threshold
for filtering genes to include in the plot. Any communities with
less than \code{community_n_secondary} number of genes greater than
\code{community_memb_cut_secondary} are filtered out.}

\item{community_n_secondary}{the number of genes that must have membership
scores great than \code{community_memb_cut_secondary} in order for a community
to be kept in the plot.}

\item{gene_memb_cut_main}{main cutoff of a membership score threshold for
filtering genes to include in the plot. Any genes with an absolute membership
score greater than \code{gene_memb_cut_main} in any community is included}

\item{gene_memb_cut_secondary}{secondary cutoff of a membership score
threshold for filtering genes to include in the plot. Any genes with an
absolute membership score greater than \code{gene_memb_cut_main} in more than 1
community is included}

\item{community_labels}{a data.frame with the text to display over gene
communities. Expects first column to match column names of \code{membership_matrix}
and second column to contain text of labels associated with each community}

\item{umap_specs}{configuration for UMAP (default is \link[umap:umap.defaults]{umap::umap.defaults}).
To use custom specs copy \link[umap:umap.defaults]{umap::umap.defaults} and make specific changes
(see {Examples})}
}
\value{
Returns a list with the following items:
\itemize{
\item \code{umap_w_annotation} - a UMAP plot of genes with labeled clusters overlaid
\item \code{umap_w_legend} - a UMAP plot of genes with a legend and no overlaid labels
\item \code{layout} - the UMAP layout to enable customized user plotting
}
}
\description{
Display UMAP of Community Membership with text overlays
}
\section{Filtering}{
In order to facilitate viewing, communities and genes are filtered prior to
plotting. Gene filtering is performed after community filtering.

For inclusion either the main or secondary parameters can be satisfied. For
example, using the defaults here a community must have either 20 genes over
0.7 kME or 5 genes over 0.8 kME to be included. After community filtering,
gene filtering is performed. Again using the defaults here, a gene must
have at least one community over 0.75 kME or two communities over 0.65 kME
to be included.

Setting \code{community_memb_cut_main} and \code{gene_memb_cut_main} to 0 will force
all communities and genes to be included in the UMAP
}

\section{Output}{
Both \code{umap_w_annotation} and \code{umap_w_legend} outputs are
\link[ggplot2:ggplot]{ggplot} objects, so plot details can easily be added or
modified (i.e. \code{umap_results$umap_w_legend + theme_classic()}).
}

\examples{
\dontrun{
library("UCSCXenaTools")
luad <- getTCGAdata(
  project = "LUAD", mRNASeq = TRUE, mRNASeqType = "normalized",
  clinical = FALSE, download = TRUE
)
ex <- as.matrix(data.table::fread(luad$destfiles), rownames = 1)
results <- icwgcna(ex)

umap_results <- make_network_umap(results$community_membership)
umap_results$umap_w_annotation
umap_results$umap_w_legend + theme(legend.position = 'top')

# can adjust umap specifications
custom_umap_specs <- umap::umap.defaults
custom_umap_specs$n_neighbors <- 20

umap_results <- make_network_umap(results$community_membership,
                                  umap_specs = custom_umap_specs)
}

}
